@model DtoModels.DtoProductos

@{
    ViewBag.Title = "Crear";
}

<h2>Crear</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>DtoProductos</h4> //
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Producto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Producto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Producto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idAliado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idAliado", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control", @onchange = "return ChangePais()" })
            @Html.ValidationMessageFor(model => model.idAliado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.valor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.valor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.valor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @Html.EditorFor(model => model.NombreAliado, new { htmlAttributes = new { @Style = "display:none", Value = "ok" } })

            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ListAlidos")', // we are calling json method
            dataType: 'json',
            success: function (states) {
                //   alert("ok_pais");
                $.each(states, function (i, state) {
                    $("#idAliado").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                });
            },
            error: function (ex) {
                console.log(ex.responseText);
            }
        });
    });
</script>
}
